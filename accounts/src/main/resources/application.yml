server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3310/accountsDB
    username: root
    password: root

  jpa:
    show-sql: true
  sql:
    init:
      mode: always

  config:
    import: optional:configserver:http://localhost:8071/

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        sendCommunication-out-0:
          destination: send-communication
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

  observations:
    key-values:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
    fetchRegistry: true
    registerWithEureka: true

info:
  app:
    name: accounts
    version: 1.0.0
    description: Accounts Service

logging:
  level:
    com:
      eazybytes:
        accounts: debug
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j:
  circuitbreaker:
    configs:
      default:
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 10
        sliding-window-size: 10
        failure-rate-threshold: 50
  retry: #enable individual service level Resiliency
    instances:
      default:
        wait-duration: 100ms
        max-attempts: 3
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 5
        retry-exceptions:
          - java.lang.RuntimeException
        ignore-exceptions:
          - java.lang.Throwable
  ratelimiter:
    configs:
      default:
        timeout-duration:
          seconds: 1
        limit-refresh-period:
          seconds: 5
        limit-for-period:
          count: 10




